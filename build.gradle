// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        agp_version = '8.1.3'
    }
    ext.kotlin_version = '2.1.0'
    repositories {
        google()
        jcenter()
        maven {
            url 'https://maven.fabric.io/public'
        }
        maven {
            url "https://jitpack.io"
        }
        maven { url = uri("https://maven.scijava.org/content/repositories/public/") }
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:2.1.0"


        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath 'com.google.firebase:firebase-crashlytics-gradle:3.0.3'
        classpath 'com.google.gms:google-services:4.4.2'
        classpath "com.android.tools.build:gradle:$agp_version"
        // Add the Crashlytics Gradle plugin (use v2.0.0+ if you built
        // your app with Android Studio 4.1).
    }
}

//allprojects {
//    repositories {
//        google()
//        jcenter()
//        maven { url "https://jitpack.io" }
//    }
//}
allprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}
subprojects {
    project.configurations.all {
        resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.android.support'
                    && !details.requested.name.contains('multidex') ) {
                details.useVersion "27.1.1"
            }else if (details.requested.group == 'android.arch.lifecycle' ) {
                details.useVersion "1.1.1"
            }
        }

    }
}
//subprojects {
//    afterEvaluate { project ->
//        if (project.hasProperty('android')) {
//            project.android {
//                if (namespace == null) {
//                    namespace project.group
//                }
//            }
//        }
//    }
//}


task clean(type: Delete) {
    delete rootProject.buildDir
}